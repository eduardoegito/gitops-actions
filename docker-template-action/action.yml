name: docker-template

# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://wallis.dev/blog/composite-github-actions
# RUN commands require "shell: bash"

inputs:
  IMAGE:
    description: 'Docker image name'
    required: true
  DOCKER_REPOSITORY:
    description: 'Docker repository name'
    required: true
  SECRET_DOCKERHUB_USERNAME:
    description: 'DockerHub username'
    required: true
  SECRET_DOCKERHUB_TOKEN:
    description: 'DockerHub token'
    required: true
  SECRET_DISCORD_WEBHOOK_URL:
    description: 'Discord webhook url'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    # extracts tag from ref, returns semver tag or latest
    - name: Get Docker tag
      id: get-docker-tag
      env:
        GITHUB_REF: ${{ github.ref }}
        COMMIT_SHA: ${{ github.sha }}
      shell: bash
      run: |
        if [[ ${{ github.ref_type }} == "tag" ]]; then
          echo "tag=${GITHUB_REF#refs/tags/v}" >> ${GITHUB_OUTPUT}
        else
          echo "tag=latest" >> ${GITHUB_OUTPUT}
        fi
    
    - name: Output Docker tag
      shell: bash
      run: echo ${{ steps.get-docker-tag.outputs.tag }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.SECRET_DOCKERHUB_USERNAME }}
        password: ${{ inputs.SECRET_DOCKERHUB_TOKEN }}

    - name: Build and push [${{ env.DOCKER_IMAGE_NAME }}]
      uses: docker/build-push-action@v4
      env:
        DOCKER_IMAGE_NAME: ${{ inputs.IMAGE }}
      with:
        context: ./docker/${{ env.DOCKER_IMAGE_NAME }}
        # if false it will only build
        push: true
        tags: |
          ${{ inputs.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ inputs.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.get-docker-tag.outputs.tag }}

    - name: Notification
      uses: hckops/actions/discord-action@main
      with:
        action: create-message
        webhook-url: ${{ inputs.SECRET_DISCORD_WEBHOOK_URL }}
        # markdown format
        message: "> Repository:  **${{ github.repository }}**\\n> Docker:\\t\\t [${{ inputs.IMAGE }}](https://hub.docker.com/r/${{ inputs.DOCKER_REPOSITORY }}/${{ inputs.IMAGE }})\\n> Status:\\t\\t  **NEW image**"
